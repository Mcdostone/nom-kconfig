name: Publish

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: "-D warnings"
  RUSTDOCFLAGS: '--deny warnings'
  MINIMUM_SUPPORTED_RUST_VERSION: 1.80.1
  DOCKER_REGISTRY: ghcr.io

permissions:
  id-token: write
  packages: write
  contents: write
  attestations: write
  pull-requests: write

on:
  workflow_dispatch:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  workflow_call:
#  workflow_run:
#    workflows: ['Tag']
#    types:
#      - completed

jobs:
  version:
    name: Determine version to publish
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.release.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - id: release
        run: echo "version=$(cargo pkgid --manifest-path crates/bin/Cargo.toml | cut -d '@' -f2)" >> "$GITHUB_OUTPUT"

  create-release:
    runs-on: ubuntu-latest
    name: Create release
    needs: version
    steps:
      - uses: actions/checkout@v4
      - name: Create github release
        run: gh release create "v${{ needs.version.outputs.version }}" --generate-notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  changelog:
    needs: [version, create-release]
    uses: ./.github/workflows/changelog.yml
    name: Create changelog
    secrets: inherit

  publish-to-registry:
    runs-on: ubuntu-latest
    name: Publish to registry
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      - name: Publish the crate
        run: cargo publish --token ${{ secrets.CRATES_TOKEN }}